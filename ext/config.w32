ARG_ENABLE("owl", "enable owl", "no");

if (PHP_OWL != "no") {
  EXTENSION("owl", "owl.c", null, "-I"+configure_module_dirname);
  ADD_SOURCES(configure_module_dirname + "/kernel", "main.c memory.c exception.c hash.c debug.c backtrace.c object.c array.c string.c fcall.c require.c file.c operators.c concat.c variables.c filter.c iterator.c exit.c", "owl");
  ADD_SOURCES(configure_module_dirname + "/kernel/extended", "array.c", "owl");
  ADD_SOURCES(configure_module_dirname + "/owl/annotations", "scanner.c parser.c", "owl");
  ADD_SOURCES(configure_module_dirname + "/owl/annotations", "exception.zep.c reader.zep.c", "owl");
	ADD_SOURCES(configure_module_dirname + "/owl", "application.zep.c exception.zep.c", "owl");
	ADD_SOURCES(configure_module_dirname + "/owl/bridge/lynx/rest", "entitycontroller.zep.c", "owl");
	ADD_SOURCES(configure_module_dirname + "/owl/event", "manager.zep.c", "owl");
	ADD_SOURCES(configure_module_dirname + "/owl/http", "request.zep.c requestinterface.zep.c response.zep.c", "owl");
	ADD_SOURCES(configure_module_dirname + "/owl/module", "manager.zep.c", "owl");
	ADD_SOURCES(configure_module_dirname + "/owl/mvc", "controller.zep.c", "owl");
	ADD_SOURCES(configure_module_dirname + "/owl/router", "route.zep.c router.zep.c routerinterface.zep.c", "owl");
	ADD_SOURCES(configure_module_dirname + "/owl/service", "manager.zep.c", "owl");
	ADD_SOURCES(configure_module_dirname + "/owl/session", "managerinterface.zep.c", "owl");
  ADD_FLAG("CFLAGS_OWL", "/D ZEPHIR_RELEASE");
}
