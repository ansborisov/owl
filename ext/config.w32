ARG_ENABLE("owl", "enable owl", "no");

if (PHP_OWL != "no") {
  EXTENSION("owl", "owl.c", null, "-I"+configure_module_dirname);
  ADD_SOURCES(configure_module_dirname + "/kernel", "main.c memory.c exception.c hash.c debug.c backtrace.c object.c array.c string.c fcall.c require.c file.c operators.c concat.c variables.c filter.c iterator.c exit.c time.c", "owl");
  ADD_SOURCES(configure_module_dirname + "/kernel/extended", "array.c fcall.c", "owl");
  /* PCRE is always included on WIN32 */
  AC_DEFINE("ZEPHIR_USE_PHP_PCRE", 1, "Whether PHP pcre extension is present at compile time");
  if (PHP_JSON != "no") {
    ADD_EXTENSION_DEP("owl", "json");
    AC_DEFINE("ZEPHIR_USE_PHP_JSON", 1, "Whether PHP json extension is present at compile time");
  }
  ADD_SOURCES(configure_module_dirname + "/owl/annotations", "scanner.c parser.c", "owl");
  ADD_SOURCES(configure_module_dirname + "/owl/annotations", "annotation.zep.c classannotationsresult.zep.c exception.zep.c reader.zep.c", "owl");
	ADD_SOURCES(configure_module_dirname + "/owl", "application.zep.c applicationinterface.zep.c dispatcherinterface.zep.c exception.zep.c", "owl");
	ADD_SOURCES(configure_module_dirname + "/owl/bridge/lynx/rest", "entitycontroller.zep.c", "owl");
	ADD_SOURCES(configure_module_dirname + "/owl/cache", "driver.zep.c", "owl");
	ADD_SOURCES(configure_module_dirname + "/owl/cache/driver", "cachedriver.zep.c memcache.zep.c memcached.zep.c nativearray.zep.c redis.zep.c", "owl");
	ADD_SOURCES(configure_module_dirname + "/owl/console", "application.zep.c commandinterface.zep.c", "owl");
	ADD_SOURCES(configure_module_dirname + "/owl/dbal", "connection.zep.c", "owl");
	ADD_SOURCES(configure_module_dirname + "/owl/dbal/driver", "mysql.zep.c pdo.zep.c", "owl");
	ADD_SOURCES(configure_module_dirname + "/owl/dbal/platform", "mysql.zep.c", "owl");
	ADD_SOURCES(configure_module_dirname + "/owl/debug", "profiler.zep.c", "owl");
	ADD_SOURCES(configure_module_dirname + "/owl/event", "event.zep.c manager.zep.c", "owl");
	ADD_SOURCES(configure_module_dirname + "/owl/http", "request.zep.c requestinterface.zep.c response.zep.c responseinterface.zep.c", "owl");
	ADD_SOURCES(configure_module_dirname + "/owl/http/response", "json.zep.c", "owl");
	ADD_SOURCES(configure_module_dirname + "/owl/log", "abstractlogger.zep.c abstractwriter.zep.c formatterinterface.zep.c logger.zep.c loggerinterface.zep.c record.zep.c writerinterface.zep.c", "owl");
	ADD_SOURCES(configure_module_dirname + "/owl/log/exception", "invalidformatterexception.zep.c invalidwriterexception.zep.c", "owl");
	ADD_SOURCES(configure_module_dirname + "/owl/log/formatter", "json.zep.c line.zep.c", "owl");
	ADD_SOURCES(configure_module_dirname + "/owl/log/writer", "echobrowser.zep.c file.zep.c", "owl");
	ADD_SOURCES(configure_module_dirname + "/owl/module", "manager.zep.c", "owl");
	ADD_SOURCES(configure_module_dirname + "/owl/mvc", "controller.zep.c view.zep.c", "owl");
	ADD_SOURCES(configure_module_dirname + "/owl/mvc/view/engine", "php.zep.c", "owl");
	ADD_SOURCES(configure_module_dirname + "/owl/router/http", "dynamicroute.zep.c staticroute.zep.c", "owl");
	ADD_SOURCES(configure_module_dirname + "/owl/router", "route.zep.c router.zep.c routerinterface.zep.c", "owl");
	ADD_SOURCES(configure_module_dirname + "/owl/service", "manager.zep.c", "owl");
	ADD_SOURCES(configure_module_dirname + "/owl/session", "managerinterface.zep.c", "owl");
	ADD_SOURCES(configure_module_dirname + "/owl/std", "arraybag.zep.c", "owl");
  ADD_FLAG("CFLAGS_OWL", "/D ZEPHIR_RELEASE");
}
