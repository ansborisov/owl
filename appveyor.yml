environment:
  matrix:
  #vc11
  #x86
  - PHP_VERSION: 5.6.11
    PHP_DEP_VER: 5.6
    THREAD_TYPE: ts
    platform: x86
    PHP_VC: 11
  - PHP_VERSION: 5.5.28
    PHP_DEP_VER: 5.5
    THREAD_TYPE: ts
    platform: x86
    PHP_VC: 11
  #x64
  - PHP_VERSION: 5.6.11
    PHP_DEP_VER: 5.6
    THREAD_TYPE: ts
    platform: x64
    PHP_VC: 11
  - PHP_VERSION: 5.5.28
    PHP_DEP_VER: 5.5
    THREAD_TYPE: ts
    platform: x64
    PHP_VC: 11
  #vc9
  #x86
  - PHP_VERSION: 5.4.44
    PHP_DEP_VER: 5.4
    THREAD_TYPE: ts
    platform: x86
    PHP_VC: 9
  PHP_SDK: c:\projects\php-sdk
  PHP_DEVPACK: c:\projects\php-devpack
  composeroauthtoken:
    secure: 6maLq/HZKCJwbF6i3AjGQ/7njbyorSFZVF1PrdTk1nzFnLEfAjQphxATom8XVod/

configuration: Release

build:
  parallel: true
  verbosity: detailed

matrix:
  fast_finish: false

cache:
  - C:\ProgramData\chocolatey\lib -> appveyor.yml
  - vendor -> composer.json

services:
  - mysql56
  - postgresql94

version: '{build}-$(PHP_VERSION)'
os: Windows Server 2012
clone_folder: c:\projects\owl

install:
  - echo Initializing Build...
  - cd %APPVEYOR_BUILD_FOLDER%
  - echo Preparing win32 build...
  - echo Downloading PHP source code [%PHP_VERSION%]
  - ps: (new-object net.webclient).DownloadFile('http://windows.php.net/downloads/releases/php-' + ${env:PHP_VERSION} + '-Win32-VC' + ${env:PHP_VC} + '-' + ${env:platform} + '.zip', ${env:APPVEYOR_BUILD_FOLDER} + '\..\php.zip')
  - cd ..
  - 'mkdir php && mv php.zip php\php.zip && cd php'
  - 7z.exe x php.zip | FIND /V "ing  "
  - cd ..
  - echo Downloading PHP-SDK
  - mkdir php-sdk && cd php-sdk
  - ps: (new-object net.webclient).DownloadFile('http://windows.php.net/downloads/php-sdk/php-sdk-binary-tools-20110915.zip', ${env:APPVEYOR_BUILD_FOLDER} + '\..\php-sdk.zip')
  - '7z.exe x ..\php-sdk.zip | FIND /V "ing  "'
  - cd ..
  - echo Downloading PHP-Devel-Pack
  - ps: (new-object net.webclient).DownloadFile('http://windows.php.net/downloads/releases/php-devel-pack-' + ${env:PHP_VERSION} + '-Win32-VC' + ${env:PHP_VC} + '-' + ${env:platform} + '.zip', ${env:APPVEYOR_BUILD_FOLDER} + '\..\php-dev.zip')
  - 7z.exe x php-dev.zip | FIND /V "ing  "
  - mv php-%PHP_VERSION%-devel-VC11-%platform% php-devpack
  - echo Building PHP [%PHP_VERSION%]
  - '"%VS110COMNTOOLS%\VsDevCmd" %platform%'
  - '%PHP_SDK%\bin\phpsdk_setvars'
  - echo Downloading PHP-memcache
  - 'cd %APPVEYOR_BUILD_FOLDER%\..\php\ext'
  - ps: (new-object net.webclient).DownloadFile('http://windows.php.net/downloads/pecl/releases/memcache/3.0.8/php_memcache-3.0.8-' + ${env:PHP_DEP_VER} + '-' + ${env:THREAD_TYPE} + '-vc' + ${env:PHP_VC} + '-' + ${env:platform} + '.zip', ${env:APPVEYOR_BUILD_FOLDER} + '\..\php\ext\memcache.zip')
  - 7z.exe -y x memcache.zip
  - echo Downloading PHP-redis
  - 'cd %APPVEYOR_BUILD_FOLDER%\..\php\ext'
  - ps: (new-object net.webclient).DownloadFile('http://windows.php.net/downloads/pecl/releases/redis/2.2.7/php_redis-2.2.7-' + ${env:PHP_DEP_VER} + '-' + ${env:THREAD_TYPE} + '-vc' + ${env:PHP_VC} + '-' + ${env:platform} + '.zip', ${env:APPVEYOR_BUILD_FOLDER} + '\..\php\ext\redis.zip')
  - 7z.exe -y x redis.zip
  - 'cd %APPVEYOR_BUILD_FOLDER%\..\php'
  - 'echo extension_dir=%APPVEYOR_BUILD_FOLDER%\..\php\ext > php.ini'
  - 'echo extension=php_openssl.dll >> php.ini'
  - 'echo extension=php_pdo_mysql.dll >> php.ini'
  - 'echo extension=php_pdo_pgsql.dll >> php.ini'
  - 'echo extension=php_pdo_sqlite.dll >> php.ini'
  - 'echo extension=php_gmp.dll >> php.ini'
  - 'echo extension=php_mbstring.dll >> php.ini'
#  - 'echo extension=php_memcached.dll >> php.ini'
  - 'echo extension=php_memcache.dll >> php.ini'
  - 'echo extension=php_redis.dll >> php.ini'
  - 'set PATH=%cd%;%PATH%'
  - 'set PATH=%APPVEYOR_BUILD_FOLDER%\vendor\zephir\bin;%PATH%'
  - cd %APPVEYOR_BUILD_FOLDER%
  - if not exist vendor (php -r "readfile('https://getcomposer.org/installer');" | php & php php composer.phar config -g github-oauth.github.com %composeroauthtoken% | php composer.phar --prefer-dist install)
  - choco install -y memcached
  - choco install -y redis
  - SET PATH=C:\Program Files\PostgreSQL\9.4\bin;%PATH%
  - SET PATH=C:\Program Files\MySql\MySQL Server 5.6\bin;%PATH%
#  - 'tests/ci/appveyor.bat'

build_script:
  - 'php vendor\phalcon\zephir\compiler.php build'
  - 'type compile-errors.log'
  - 'type compile.log'
  - 'dir %APPVEYOR_BUILD_FOLDER%\ext\Release_TS'
  - 'copy %APPVEYOR_BUILD_FOLDER%\ext\Release_TS\php_owl.dll %APPVEYOR_BUILD_FOLDER%\..\php\ext\php_owl.dll'
  - 'cd %APPVEYOR_BUILD_FOLDER%\..\php'
  - 'echo extension=php_owl.dll >> php.ini'
  - cd %APPVEYOR_BUILD_FOLDER%
  - 'php vendor\phpunit\phpunit\phpunit -v --debug --configuration tests/travis/appveyor.xml --testsuite Owl'

test: off

artifacts:
  - path: ext\Release_TS\php_owl.dll
